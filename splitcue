#!/usr/bin/env python3.5

from argparse import ArgumentParser
from os import path
import glob, shlex, subprocess

description = "Split an audio file using a CUE file, and transfer any tags to the produced files."

parser = ArgumentParser(description=description)
parser.add_argument("cuefile", metavar="CUE", type=str,
        help="CUE file to be parsed")
parser.add_argument("audiofile", metavar="AUDIO", type=str,
        help="audio file to be split")
parser.add_argument("-f", "--format", default="flac", type=str,
                    help="audio format, see `man shntool`")
parser.add_argument("-n", "--name", default="split-track-", type=str,
        help="prefix for the names of split audio files")
parser.add_argument("-o", "--output", default=".", type=str,
        help="directory for split audio files to be saved")
args = parser.parse_args()

def print_pretty(*args):
    print("♩♬♪ ", *args)
def print_process(process, description):
    print_pretty(" ".join([ shlex.quote(s) for s in  process.args ]))
    print(process.stdout.decode().strip())
    try:
        process.check_returncode()
    except subprocess.CalledProcessError as e:
        print_pretty("Failed", description + ".")
        exit(e.returncode)
        return
    print_pretty("Succeeded", description + ".")
    print()

cuebreakpoints = subprocess.run([ "cuebreakpoints", args.cuefile ],
        stderr=subprocess.STDOUT, stdout=subprocess.PIPE)
print_process(cuebreakpoints, "parsing CUE breakpoints")

shnsplit = subprocess.run([ "shnsplit", "-o", args.format,
        "-a", args.name, "-d", args.output, args.audiofile ],
        stderr=subprocess.STDOUT, stdout=subprocess.PIPE, input=cuebreakpoints.stdout)
print_process(shnsplit, "splitting the audio file")

output_pattern = path.join(args.output, args.name) + "*"
output_files = glob.glob(output_pattern)
cuetag = subprocess.run([ "cuetag", args.cuefile ] + output_files,
        stderr=subprocess.STDOUT, stdout=subprocess.PIPE)
print_process(cuetag, "tagging the split audio files")
